########################################################################################
# "yarn install" composite action for yarn 2/3/4+ and "nodeLinker: node-modules"       #
#--------------------------------------------------------------------------------------#
# Cache:                                                                               #
#   - Downloaded zip archive (multi-arch, preserved across yarn.lock changes)          #
#   - Yarn install state (discarded in yarn.lock changes)                              #
# References:                                                                          #
#   - bench: https://gist.github.com/belgattitude/0ecd26155b47e7be1be6163ecfbb0f0b     #
#   - vs @setup/node: https://github.com/actions/setup-node/issues/325                 #
########################################################################################

name: 'Monorepo install (yarn)'
description: 'Run yarn install with node_modules linker and cache enabled'
inputs:
  cacheExtraKey:
    description: 'Extra key to add to the cache (ie: multiple node versions)'
    required: false
    default: 'default'

  cacheInstallState:
    description: 'Cache yarn install state (invalidated on lock changes)'
    required: false
    default: 'true'

  cacheNodeModules:
    description: 'Cache node_modules (invalidated on lock changes)'
    required: false
    default: 'true'


runs:
  using: 'composite'

  steps:
    - name: Expose yarn config as "$GITHUB_OUTPUT"
      id: yarn-config
      shell: bash
      run: |
        echo "CACHE_FOLDER=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    #- name: Debug cache-dir
    #  shell: bash
    #  run: echo "CACHE_FOLDER = ${{ steps.yarn-config.outputs.CACHE_FOLDER }}"

    # Yarn rotates the downloaded cache archives.
    # @see https://github.com/actions/setup-node/issues/325
    - name: Restore yarn download cache
      uses: actions/cache@v3
      id: yarn-download-cache
      with:
        path: ${{ steps.yarn-config.outputs.CACHE_FOLDER }}
        key: yarn-download-cache-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          yarn-download-cache-

    # Invalidated on yarn.lock changes
    - name: Restore yarn install state
      if: inputs.cacheInstallState == 'true'
      id: yarn-install-state-cache
      uses: actions/cache@v3
      with:
        path: |
          .yarn/ci-install-state
        key: ${{ runner.os }}-yarn-install-state-cache-${{ inputs.cacheExtraKey }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}


    # Invalidated on yarn.lock changes
    - name: Restore yarn node_modules
      if: inputs.cacheNodeModules == 'true'
      id: yarn-install-nm
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-yarn-install-nm-${{ inputs.cacheExtraKey }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}


    - name: Debug
      shell: bash
      run: |
        ls -laR .yarn/ci-install-state
        ls -a .yarn
        ls -la node_modules/.yarn-state.yml            
        ls -laR packages/exception
        ls -a node_modules
        cat node_modules/.yarn-state.yml

    - name: Install dependencies
      shell: bash
      run: yarn install --immutable --inline-builds
      env:
        # CI optimizations. Overrides yarnrc.yml options (or their defaults) in the CI action.
        YARN_ENABLE_GLOBAL_CACHE: 'false' # Use local cache folder to keep downloaded archives
        YARN_NM_MODE: 'hardlinks-local' # Hardlinks-(local|global) reduces io / node_modules size
        YARN_INSTALL_STATE_PATH: .yarn/ci-install-state/install-state.gz # Very small speedup when lock does not change
        # Other environment variables
        HUSKY: '0' # By default do not run HUSKY install
